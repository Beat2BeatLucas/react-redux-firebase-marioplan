{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notification.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","className","to","href","onClick","profile","initials","SignedOutLinks","state","console","log","firebase","links","uid","Notifications","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","Dashboard","this","Notification","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleChange","e","setState","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","credentials","signInWithEmailAndPassword","catch","error","SignUp","firstname","lastname","signUp","newUser","getFirestore","createUserWithEmailAndPassword","response","doc","set","firstName","lastName","CreateProject","createProject","history","push","authorId","add","Date","App","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","rrfProps","config","userProfile","useFirestoreForProfile","createFirestoreInstance","presence","sessions","ReactDOM","render","children","useSelector","isLoaded","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5d0eb5e6.chunk.js","sourcesContent":["import React, { Profiler } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { signOut } from '../../store/actions/authActions';\r\n\r\nconst SignedInLinks = (props) => {\r\n    return (\r\n        <ul className='right'>\r\n            <li><NavLink to='/create'>New Proyect</NavLink></li>\r\n            <li><a href='/' onClick={props.signOut}>Log out</a></li>\r\n            <li><NavLink to='/' className='btn btn-floating pink lighten-1'>{props.profile.initials}</NavLink></li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signOut: () => dispatch(signOut())\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(SignedInLinks);","export const signIn = (credentials) => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n        const firebase = getFirebase();\r\n        //console.log(credentials.email);\r\n        //console.log(credentials.password);\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password\r\n        ).then(() => {\r\n            dispatch({type: 'LOGIN_SUCCESS'})\r\n        }).catch((error) => {\r\n            dispatch({ type: 'LOGIN_ERROR', error})\r\n        });\r\n    }\r\n}\r\n\r\nexport const signOut = () => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signOut().then(() => {\r\n            dispatch({ type: 'SIGNOUT_SUCCESS'})\r\n        })\r\n    }\r\n}\r\n\r\nexport const signUp = (newUser) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n        const firebase = getFirebase();\r\n        const firestore = getFirestore();\r\n        \r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email,\r\n            newUser.password\r\n        ).then((response) => {\r\n            return firestore.collection('users').doc(response.user.uid).set({\r\n                firstName: newUser.firstname,\r\n                lastName: newUser.lastname,\r\n                initials: newUser.firstname[0] + newUser.lastname[0]\r\n            })\r\n        }).then(() => {\r\n            dispatch({ type: 'SIGNUP_SUCCESS' })\r\n        }).catch( error => {\r\n            dispatch({ type: 'SIGNUP_ERROR', error })\r\n        })\r\n    }\r\n}","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst SignedOutLinks = () => {\r\n    return (\r\n        <ul className='right'>\r\n            <li><NavLink to='/signup'>Signup</NavLink></li>\r\n            <li><NavLink to='/signin'>Login</NavLink></li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default SignedOutLinks;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport SignedInLinks from './SignedInLinks';\r\nimport SignedOutLinks from './SignedOutLinks';\r\nimport { connect } from 'react-redux';\r\n\r\nconst Navbar = (props) => {\r\n    const { auth, profile } = props;\r\n    //console.log(auth);\r\n    const links = auth.uid ? <SignedInLinks profile={profile} /> : <SignedOutLinks />\r\n    return (\r\n        <nav className=\"nav-wrapper grey darken-3\">\r\n            <div className=\"container\">\r\n                <Link to='/' className='brand-logo'>MarioPlan</Link>\r\n                { links }\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    console.log(state);\r\n    return {\r\n        auth: state.firebase.auth,\r\n        profile: state.firebase.profile\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navbar);","import React from 'react';\r\nimport moment from 'moment';\r\n\r\nconst Notifications = (props) => {\r\n    const { notifications } = props;\r\n    return (\r\n        <div className='section'>\r\n            <div className='card z-depth-0'>\r\n                <div className='card-content'>\r\n                    <span className='card-title'>Notifications</span>\r\n                    <ul className='notification'>\r\n                        { notifications && notifications.map(item => {\r\n                            return (\r\n                                <li key={item.id}>\r\n                                    <span className='pink-text'>{item.user} </span>\r\n                                    <span>{item.content}</span>\r\n                                    <div className='grey-text note-date'>\r\n                                        {moment(item.time.toDate()).fromNow()}\r\n                                    </div>\r\n                                </li>\r\n                            )\r\n                        }) }\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notifications;","import React from 'react';\r\nimport moment from 'moment';\r\n\r\nconst ProjectSummary = ({ project }) => {\r\n    return (\r\n        <div className='card z-depth-0 project-summary'>\r\n            <div className='card-content grey-text text-darken-3'>\r\n                <span className='card-title'>{project.title}</span>\r\n                <p>Posted by {project.authorFirstName} {project.authorLastName}</p>\r\n                <p className='grey-text'>{moment(project.createdAt.toDate()).calendar()}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectSummary;","import React from 'react';\r\nimport ProjectSummary from './ProjectSummary';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst ProjectList = ({ projects }) => {\r\n    return (\r\n        <div className='project-list section'>\r\n            { projects && projects.map(project => {\r\n                return (\r\n                    <Link to={'/project/' + project.id} key={project.id}>\r\n                        <ProjectSummary project={project} />\r\n                    </Link>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectList;","import React, { Component } from 'react';\r\nimport Notifications from './Notification';\r\nimport ProjectList from '../projects/ProjectList';\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass Dashboard extends Component {\r\n    render(){\r\n        //console.log(this.props);\r\n        const { projects, auth, notifications } = this.props;\r\n\r\n        if (!auth.uid) return <Redirect to='/signin' />\r\n        \r\n        return (\r\n            <div className='dashboard container'>\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 m6\">\r\n                        <ProjectList projects={projects} />\r\n                    </div>\r\n                    <div className=\"col s12 m5 offset-m1\">\r\n                        <Notifications notifications={notifications} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    //console.log(state);\r\n    return {\r\n        projects: state.firestore.ordered.projects,\r\n        auth: state.firebase.auth,\r\n        notifications: state.firestore.ordered.notifications\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        { collection: 'projects', orderBy: ['createdAt', 'desc'] },\r\n        { collection: 'notifications', limit: 3, orderBy: ['time', 'desc']}\r\n    ])\r\n)(Dashboard);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst  ProjectDetails = (props) => {\r\n    //console.log(props);\r\n    const { project, auth } = props;\r\n    if (!auth.uid) return <Redirect to='/signin' />\r\n\r\n    if(project) {\r\n        return (\r\n            <div className='container section project-details'>\r\n                <div className='card z-depth-0'>\r\n                    <div className='card-content'>\r\n                        <span className='card-title'>{ project.title }</span>\r\n                        <p>{ project.content }</p>\r\n                    </div>\r\n                    <div className='card-action gray lighten-4 grey-text'>\r\n                        <div>Posted by { project.authorFirstName } { project.authorLastName }</div>\r\n                        <div>2nd September, 2am</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div className='container center'>\r\n                <p>Loading project...</p>\r\n            </div>\r\n        )\r\n    }   \r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    //console.log(state);\r\n    const id = ownProps.match.params.id;\r\n    const projects = state.firestore.data.projects;\r\n    const project = projects ? projects[id] : null;\r\n\r\n    return {\r\n        project: project,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        { collection: 'projects' }\r\n    ])\r\n)(ProjectDetails)\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { signIn }  from '../../store/actions/authActions';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass SignIn extends Component {\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value,\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        //console.log(this.state);\r\n        this.props.signIn(this.state);\r\n    }\r\n\r\n    render() {\r\n        const { authError, auth } = this.props;\r\n        if (auth.uid) return <Redirect to='/' />\r\n\r\n        return (\r\n            <div className='container'>\r\n                <form onSubmit={this.handleSubmit} className='white'>\r\n                    <h5 className='grey-text text-darken-3'>Sign In</h5>\r\n                    <div className='input-field'>\r\n                        <label htmlFor='email'>Email</label>\r\n                        <input type='text' id='email' onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className='input-field'>\r\n                        <label htmlFor='password'>Password</label>\r\n                        <input type='password' id='password' onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className='input field'>\r\n                        <button className='btn pink lighten-1 z-depth-0'>Login</button>\r\n                        <div className=\"red-text center\">\r\n                            { authError ? <p>{authError}</p> : null}\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        authError: state.auth.authError,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n         signIn: (credentials) => dispatch(signIn(credentials))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);\r\n","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { signUp } from '../../store/actions/authActions';\r\n\r\nclass SignUp extends Component {\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n        firstname: '',\r\n        lastname: '',\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value,\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        //console.log(this.state);\r\n        this.props.signUp(this.state);\r\n    }\r\n\r\n    render() {\r\n        const { auth, authError } = this.props;\r\n        if (auth.uid) return <Redirect to='/' />\r\n\r\n        return (\r\n            <div className='container'>\r\n                <form onSubmit={this.handleSubmit} className='white'>\r\n                    <h5 className='grey-text text-darken-3'>Sign Up</h5>\r\n                    <div className='input-field'>\r\n                        <label htmlFor='email'>Email</label>\r\n                        <input type='text' id='email' onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className='input-field'>\r\n                        <label htmlFor='password'>Password</label>\r\n                        <input type='password' id='password' onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className='input-field'>\r\n                        <label htmlFor='firstname'>First name</label>\r\n                        <input type='text' id='firstname' onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className='input-field'>\r\n                        <label htmlFor='lastname'>Last name</label>\r\n                        <input type='text' id='lastname' onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className='input field'>\r\n                        <button className='btn pink lighten-1 z-depth-0'>Sign up</button>\r\n                        <div className='red-text center'>\r\n                            { authError ? <p>{ authError }</p> : null }\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n        authError: state.auth.authError\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signUp: (newUser) => dispatch(signUp(newUser))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { createProject } from '../../store/actions/projectActions';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass CreateProject extends Component {\r\n    state = {\r\n        title: '',\r\n        content: '',\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value,\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        //console.log(this.state);\r\n        this.props.createProject(this.state);\r\n        this.props.history.push('/');\r\n    }\r\n\r\n    render() {\r\n        const { auth } = this.props;\r\n        if (!auth.uid) return <Redirect to='/signin' />\r\n        \r\n        return (\r\n            <div className='container'>\r\n                <form onSubmit={this.handleSubmit} className='white'>\r\n                    <h5 className='grey-text text-darken-3'>Create new project</h5>\r\n                    <div className='input-field'>\r\n                        <label htmlFor='title'>Title</label>\r\n                        <input type='text' id='title' onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className='input-field'>\r\n                        <label htmlFor='content'>Project Content</label>\r\n                        <textarea id='content' className='materialize-textarea' onChange={this.handleChange}></textarea>\r\n                    </div>\r\n                    <div className='input field'>\r\n                        <button className='btn pink lighten-1 z-depth-0'>Create</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        createProject: (project) => dispatch(createProject(project)) \r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject);","export const createProject = (project) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        //make async call to database\r\n        const firestore = getFirestore();\r\n        const profile = getState().firebase.profile;\r\n        const authorId = getState().firebase.auth.uid;\r\n        firestore.collection('projects').add({\r\n            ...project,\r\n            authorFirstName: profile.firstName,\r\n            authorLastName: profile.lastName,\r\n            authorId: authorId,\r\n            createdAt: new Date()\r\n        }).then(() => {\r\n            dispatch({ type: 'CREATE_PROJECT', project });\r\n        }).catch((error) => {\r\n            dispatch({ type: 'CREATE_PROJECT_ERROR', error });\r\n        })\r\n    }\r\n};","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Dashboard from './components/dashboard/Dashboard';\nimport ProjectDetails from './components/projects/ProjectDetails';\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\nimport CreateProject from './components/projects/CreateProject';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Navbar />\n        <Switch>\n          <Route exact path='/' component={Dashboard}/>\n          <Route path='/project/:id' component={ProjectDetails}/>\n          <Route path='/signin' component={SignIn}/>\n          <Route path='/signup' component={SignUp} />\n          <Route path='/create' component={CreateProject} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState = {\r\n    authError: null\r\n}\r\n\r\nconst authReducer = (state = initState, action) => {\r\n    switch(action.type){\r\n        case 'LOGIN_ERROR':\r\n            console.log('login error');\r\n            return {\r\n                ...state,\r\n                authError: 'Login failed'\r\n            }\r\n        case 'LOGIN_SUCCESS':\r\n            console.log('login success');\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }\r\n        case 'SIGNOUT_SUCCESS':\r\n            console.log('signout success');\r\n            return state;\r\n        case 'SIGNUP_SUCCESS':\r\n            console.log('signup success');\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }\r\n        case 'SIGNUP_ERROR':\r\n            console.log('signup error');\r\n            return {\r\n                ...state,\r\n                authError: action.error.message\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default authReducer;","const initState = {\r\n    projects: [\r\n        {id: '1', title: 'help me find peach', content: 'blah blah blah'},\r\n        {id: '2', title: 'collect all the stars', content: 'blah blah blah'},\r\n        {id: '3', title: 'egg hunt with yoshi', content: 'blah blah blah'},\r\n    ]\r\n}\r\n\r\nconst projectReducer = (state = initState, action) => {\r\n    switch(action.type){\r\n        case 'CREATE_PROJECT':\r\n            console.log('created project', action.project);\r\n            return state;\r\n        case 'CREATE_PROJECT_ERROR':\r\n            console.log('create project error', action.error);\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default projectReducer;","import authReducer from './authReducer';\r\nimport projectReducer from './projectReducer';\r\nimport { combineReducers } from 'redux';\r\nimport { firestoreReducer } from 'redux-firestore';\r\nimport { firebaseReducer} from 'react-redux-firebase';\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    project: projectReducer,\r\n    firestore: firestoreReducer,\r\n    firebase: firebaseReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\n// Your web app's Firebase configuration\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyCnkW0u5IX3ilMDo64M1oqCjy2YhTNrKrY\",\r\n    authDomain: \"net-ninja-marioplan-87c40.firebaseapp.com\",\r\n    databaseURL: \"https://net-ninja-marioplan-87c40.firebaseio.com\",\r\n    projectId: \"net-ninja-marioplan-87c40\",\r\n    storageBucket: \"net-ninja-marioplan-87c40.appspot.com\",\r\n    messagingSenderId: \"56244573259\",\r\n    appId: \"1:56244573259:web:9547dea24084f4c0a669ce\",\r\n    measurementId: \"G-2PJ22L7PF7\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n  firebase.firestore();\r\n  firebase.auth();\r\n  export default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './store/reducers/rootReducer';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { createFirestoreInstance, getFirestore, reduxFirestore } from 'redux-firestore';\nimport { ReactReduxFirebaseProvider, getFirebase } from 'react-redux-firebase';\nimport fbConfig from './config/fbConfig';\nimport firebase from 'firebase/app';\nimport { useSelector  } from 'react-redux'\nimport { isLoaded  } from 'react-redux-firebase';\n\nconst store = createStore(\n    rootReducer,\n    compose(\n        applyMiddleware(thunk.withExtraArgument({ getFirestore, getFirebase })),\n        reduxFirestore(firebase, fbConfig)\n    )\n);\n\nconst rrfConfig = {\n    userProfile: 'users',\n    useFirestoreForProfile: true \n}\n  \nconst rrfProps = {\n    firebase,\n    config: rrfConfig,\n    dispatch: store.dispatch,\n    createFirestoreInstance,\n    presence: 'presence',\n    sessions: 'sessions'\n};\n\nfunction AuthIsLoaded({ children }) {\n    const auth = useSelector(state => state.firebase.auth)\n    if (!isLoaded(auth)) return <div>Loading screen...</div>;\n    return children\n  }\n\nReactDOM.render(\n    <Provider store={store}>\n        <ReactReduxFirebaseProvider {...rrfProps}>\n            <AuthIsLoaded>\n                <App />\n            </AuthIsLoaded> \n        </ReactReduxFirebaseProvider>\n    </Provider>,\n    document.getElementById(\"root\")\n);\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}